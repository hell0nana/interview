1. 상수란 무엇이며 변수와의 차이는?
변수와는 달리 단 한번만 값을 할당할 수 있는 변하지 않는 값이며 변경 불가능.
변수에 final을 붙여 상수 선언이 가능. 모두 대문자로 써야함. 둘 이상의 단어일경우 _로 연결

2. 초기화란?
변수, 상수에 값을 첫번째로 할당하는 것.

3. 리터럴이란?
변수의 값이 변하지 않는 데이터 (메모리 위치안의 값)
상수는 변하지 않는 변수(메모리 위치)

4.아래의 내용이 에러가 나는 이유와 수정 방법은?
java
System.out.println(3147483647 + 3147483648); //에러남
정수는 기본적으로 int로 인식하나 숫자가 int의 리터럴 범위를 벗어났기 때문(오버플로우)
21억이 넘는 수는 L으로 자료형을 변환해야 한다.

5. 자동 형변환과 명시적 형변환에 대하여 설명하시오.
자동 형변환: 
프로그램 실행 중 자동적으로 형변환이 일어나는 것. 
바이트 크기가 작은 자료형에서 큰자료형으로 변환
(자료의 크기에 상관없이 오차를 줄이기 위해 실수 자료형은 정수 자료형보다 우선)
명시적 형변환(강제적 형변환): 
더 작은 자료형으로의 변환(또는 자동 형변환 규칙에 어긋나는 변환)은 강제로 수정해서 변환해야 함. 
값 앞에 (자료형)을 적어주면 됨.

6.아래의 에러가 나는 이유를 설명하고 수정 하시오.
int a = 3;
int b = 4;	
double result = a / b;
System.out.println(result);
a와b가 int라서 결과값인 몫이 0.75가 아닌 0.0로 나옴. 
자료형을 (double)로 변환시켜줘야함(명시적 형변환)
double result = (double)a/b;

7. 이스케이프 시퀀스의 종류를 나열하고 기능을 설명하시오.
'\t' 수평탭 - 탭 만큼 이동 / '\n' 강제개행 - 한 줄 아래로 내림 / '\b' 백스페이스 - 문자를 지움
'\r' 캐리지리턴 - 맨 앞줄의 문자를 변환 / '\s' 띄어쓰기 - 한칸 띄움 / '\\'백슬래시 - \표시
'\"작은따옴표 - 작은따옴표 표시 / '\"'큰따옴표 - 큰 따옴표 표시 / '\a' 경고음 - 
'\f' 폼 피드 - / '\v' 수직탭 - / '\?' 물음표 - 물음표 표시 / '\ooo' - 아스키코드 8진수 표시
'\xhhh' - 아스키코드 16진수 표시

8. 아래의 출력 결과를 확인하고, 130이 나오는 이유를 설명
System.out.println('A'); 
System.out.println('A' + 'A'); 
첫번째 출력 - 연산과정이 없기 때문에 A문자가 그대로 출력.
두번째 출력 - 130출력. 
int 이하의 데이터끼리의 연산은 빈 곳을 0으로 채운 후 자동형변환이 일어나 int로 계산.
따라서 2비트인 char은 아스키코드 65값으로 들어가서 연산이 되므로 130이 출력.

9. 결합 방향과 우선순위에 대하여 설명하시오.
결합방향:여러개의 같은 연산자가 있을 때 먼저 수행하는 방향
우선순위:서로 다른 연산자가 있을 때 먼저 수행하는 연산자의 순위
-괄호의 우선순위가 제일 높고, 산술 > 비교 > 논리 > 대입 / 단항 > 이항 > 삼항)

10. && 와 || 설명하시오.
&&:and 논리연산자. 모든 항목이 참이여야 참 값이 나옴
||:or 논리연산자. 하나만 참이어도 참 값이 나옴

11.아래와 같이 출력값이 나오는 이유를 설명하시오.
public class Hello {
	public static void main(String[] args) {
		int ch = '1';
		int num = 1;		
		System.out.println(ch);
		System.out.println(num);   	    
	}
}
/* 
출력결과
49
1
*/
int ch = 데이터 타입이 정수이기 때문에 1의 코드값인 49를 출력.
int num = 데이터 타입인 정수1을 그대로 출력

12. ASCII(아스키 코드)란?
American Standart Code for Information Interchange의 약자. 
영문 알파벳을 사용하는 대표적인 문자 인코딩.
1963년에 미국 ANSI에서 표준화한 정보교환용 영어지원 문자부호체계. 문자와 숫자를 일대일로 매칭.
주로 통신용 코드에 사용. 7비트의 이진수 조합으로 총 128개의 부호를 표현하는 코드. 
남은 1비트는 통신에러 검출을 위해서 사용.
매우 단순하고 간단하여 어디서든 적용가능 하지만 2바이트 이상의 코드를 표현할 수 없음.
숫자, 알파벳문자, 특수문자 가능.
ASC+세계각국문자 => 유니코드((UTF-8/UTF-16)
아스키코드에 이어, 전세계의 모든 문자를 컴퓨터에서 일관되게 표현하고 다룰수 있도록 확장된 표준코드

13. 캐스팅이란?
데이터의 형변환을 뜻하는 것.

14. 자바에서 변수의 데이터 타입을 지정하는 이유는?
어떤 데이터를 담고 있는지 어디에서 쓰이는지 표기하기 위해서.

15. 변수의 효용이란?
데이터의 구분이 가능함.