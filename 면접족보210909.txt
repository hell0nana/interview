1. 아래의 함수를 만들고, 해당 함수를 호출하여 확인 하시오.
함수이름: getGrade
매개변수: double type 1개
리턴타입: 수 우 미 양 가 중 하나의 char 타입
답
		int kor = 0;
		int eng = 0;
		int math = 0;
		int all = kor + eng + math;
		double avg = all/3.0;
		System.out.println("성적은 " + getGrade(avg));
		
	}
	public static char getGrade (double avg) {
		char grade = '가';
		if (avg >= 90) {
			grade = '수';
		} else if (avg >= 80) {
			grade = '우';
		} else if (avg >= 70) {
			grade = '미';
		} else if (avg >= 60) {
			grade = '가';
		}
		return grade;

2. 매개변수 하나를 받아 
원의 넓이를 리턴하는 함수를 작성하시오.
답
		double n = 10;
		System.out.println("넓이는 " + wide(n));
		
	}
	public static double wide(double l) {
		return l*l*Math.PI;

3. 매개변수 두 개를 받아, 사각형의 넓이를 리턴하는 함수를 
작성하시오.

4. 매개변수 1000을 넣으면 1부터 1000 까지의 합 리턴
답
		int n = 10;
		System.out.println(sum(n));

	}
	public static int sum(int n) {
		int sum = 0;
		for (int i = 1; i <= n; ++i) {
			sum += i;
		}
		return sum;

5. 매개변수 int 로 3개 받아서 최대값 리턴
답
		int n1 = 0;
		int n2 = 1;
		int n3 = 2;
		System.out.println(max(n1, n2, n3));

	}

	public static int max(int n1, int n2, int n3) {
		int max = (((n1 > n2) ? ((n1 > n3) ? n1 : n3) : ((n2 > n3) ? n2 : n3)));
		return max;

6. 아래가 의도하지 않은 결과를 나타내는 이유를 설명하시오.
char ch = '가';
System.out.println(ch + '\n'); //44042 라는 int 정수값 출력됨
// 의도를 표현하기 위한 방법
System.out.println(ch + "\n"); //가 출력됨
답
작은따옴표 안에 들어가면 char타입으로 인식하기 때문에 int 연산이 진행. 
따라서 int로 자동 형변환 후 아스키코드 값끼리 연산해서 출력.
큰따옴표 안에 들어가면 String타입 문자로 인식하기 때문에 이어붙여서 가 출력.

7. 변수의 scope 는?
변수의 유효범위. 해당 변수가 해당하는 영역. 선언된 시점부터 해당 중괄호 블럭 안에서 기능 함. 
같은 영역 안에서 동일 변수 선언 불가

8. 펙토리얼을 구하는 재귀 함수를 만드시오.
답
		int n = 10;
		System.out.println(factorial(n));

	}

	public static int factorial(int n) {
		if (n == 1) {
			return 1;
		} else {
			return n = n * factorial(n - 1);
		}

9.아래를 함수로 만들어 찍으시오.
printStar(5)

    *
   ***
  *****
 *******
*********
답
		star(3);

	}

	public static void star(int n) {
		for (int i = 1; i <= n; ++i) {
			System.out.println("");
			for (int j = n; j >= i; --j) {
				System.out.print(" ");
			}
			for (int j = 1; j <= i; ++j) {
				System.out.print("*");
			}
			for (int j = 1; j < i; ++j) {
				System.out.print("*");
			}
		}


10.객체란 무엇인가?
instance. 하나의 class를 복제해 서로 다른 데이터의 값과 서로 같은 메소드를 가진 복제본을 생성. 
보통 new를 붙임. 긴 맥락의 작업시 유용. 

11. 아래를 함수로 만들어시오.
getCurrentPaper(126500)
출력:
오만원 : 2장	
만원:    2장
오천원 :1장
천원: 1
오백원: 1개
백원: 0개
답
		getCurrentPaper(126500);

	}
	public static void getCurrentPaper(int n) {
		int fivem = n / 50000;
		int w = n % 50000;
		int m = w / 10000;
		w %= 10000;
		int fivec = w / 5000;
		w %= 5000;
		int c = w / 1000;
		w %= 1000;
		int fiveb = w / 500;
		w %= 500;
		int b = w / 100;
		System.out.println("오만원 "+ fivem + "장");
		System.out.println("만원 "+ m + "장");
		System.out.println("오천원 "+ fivec + "장");
		System.out.println("천원 "+ c + "장");
		System.out.println("오백원 "+ fiveb + "개");
		System.out.println("백원 "+ b + "개");

12. 클래스명은 자유롭게 작성하시면 되고
다음과 같은 함수를 만들겁니다.
세 자리의 자연수를 곱하는 과정을 보여주는 함수 "myMultiply"
세 자리의 자연수의 곱은 다음과 같이 이루어집니다. 출력값은 계산과정들을 출력합니다.
     352
×  373
---------
   1056 ---일의자리 출력
  2464  ---십의자리 출력
1056   ---백의자리 출력
----------
131296 ---최종결과 출력
호출방식은 다음과 같습니다.
myMultiply(264,317);
실행결과는 다음과 같습니다.
1848
264
792
83688
답
		myMultiply(264,317);
		
	}
	public static void myMultiply(int n1, int n2) {

		int n21 = n2 / 100;
		int nn = n2 % 100;
		int n22 = nn / 10;
		nn %= 10;
		int n23 = nn / 1;
		
		System.out.println(n1*n23);
		System.out.println(n1*n22);
		System.out.println(n1*n21);
		System.out.println(n1*n2);

13.아래의 함수를 만드시오.
파라미터로 1000을 넣으면 1부터 1000까지의
숫자중 5의 배수이자 7의 배수인 수를 카운트 하여 리턴
답
		int n = 1000;
		System.out.println(count(n));

	}

	public static int count(int n) {
		int count = 0;
		for (int i = 1; i <= n; ++i) {
			if ((i % 5 == 0) && (i % 7 == 0)) {
				count++;
			}

		}
		return count;

14.아래의 함수를 만드시오.
getGugudan(3) // 3단 출력
getGugudan(5) // 5단 출력
getGugudan(6) // 6단 출력
getGugudan(7) // 7단 출력
답
		getGugudan(3);
	}
	public static void getGugudan(int n) {
		for (int i = 1; i <= n; ++i) {
			for (int j = 1; j <= 9; ++j) {
				System.out.println(i + "*" + j + "=" + (i*j));
			}
		}