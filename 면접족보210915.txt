1.아래의 사칙연산 계산기를 프로그래밍하시오.
출력========================== 
첫 번째 숫자를 입력하세요.
90
연산 기호를 입력하세요.
+
두 번째 숫자를 입력하세요.
65
155
종료하시겠습니까? 종료:y 계속:n
n
첫 번째 숫자를 입력하세요.
90
연산 기호를 입력하세요.
-
두 번째 숫자를 입력하세요.
56
34
종료하시겠습니까? 종료:y 계속:n
y
종료입니다.
답
import java.util.Scanner;

class Four0915 {
	private int n1, n2, sum;
	private String four, yn;

	public void four() {
		do {
			System.out.println("첫 번째 숫자를 입력하세요.");
			Scanner sc = new Scanner(System.in);
			n1 = sc.nextInt();
			System.out.println("연산 기호를 입력하세요");
			four = sc.next();
			System.out.println("두 번째 숫자를 입력하세요.");
			n2 = sc.nextInt();
			if (four.equals("+")) {
				sum = n1 + n2;
			} else if (four.equals("-")) {
				sum = n1 - n2;
			} else if (four.equals("*")) {
				sum = n1 * n2;
			} else if (four.equals("/")) {
				sum = n1 / n2;
			}
			System.out.println(sum);
			System.out.println("종료하시겠습니까? 종료:y");
			yn = sc.next();
			if (yn.equals("y")) {
				System.out.println("종료입니다.");
				break;
			}
		} while (true);
	}
}

public class Java09 {
	public static void main(String[] args) {
		Four0915 four = new Four0915();
		four.four();
	}

}

2. 랜덤 숫자 맞추기 게임을 짜시오.

남은 횟수 : 10회 에서 시작

1-100사이의 숫자 중에 숫자 맞추기

//아래의 랜덤함수를 사용 할것
(int)((Math.random()*100)+1); 

==========================
1~100 사이의 숫자를 입력하세요.
남은 횟수 : 10
50
UP
남은 횟수 : 9
65
UP
남은 횟수 : 8
80
DOWN
남은 횟수 : 7
75
DOWN
남은 횟수 : 6
73
DOWN
남은 횟수 : 5
70
UP
남은 횟수 : 4
71
축하합니다. 7회 만에 맞추셨습니다.
프로그램을 종료합니다.
답
import java.util.Scanner;

class Random0915 {
	private int answer = (int) ((Math.random() * 100) + 1);
	private int n;

	public void random() {
		int i = 10;
		do {

			System.out.println("1~100 사이의 숫자를 입력하세요.");
			System.out.println("남은 횟수: " + i);
			Scanner sc = new Scanner(System.in);
			n = sc.nextInt();
			if (n > answer) {
				System.out.println("DOWN");
			} else if (n < answer) {
				System.out.println("UP");
			} else if (n == answer) {
				System.out.println("츅하합니다. " + (11-i) + "회 만에 맞추셨습니다.");
				System.out.println("프로그램을 종료합니다.");
				break;
			}
			--i;
		} while (i > 0);
}
}

public class Java09 {
	public static void main(String[] args) {
		Random0915 random = new Random0915();
		random.random();
	}
}

3 . 아래와 같이 출력이 나오도록 프로그래밍 하시오.
Player 객체를 완성하시오.
main(){
Player p1 = new Player()
Player p2 = new Player()
Player p3 = new Player()
Player p4 = new Player()
System.out.println(Player.instance);
}
출력:
4

4. static 변수의 다른 용어 3가지를 말해 보시오.
클래스변수 공유변수 정적변수

5. static 변수의 접근 방법은?
클래스 내에서는 이름만으로 접근 가능. private 이 없다면 클래스 밖에서도 접근 가능

6.. 클래스(static) 변수의 활용의 예를 드시오.
Math.PI

7. 스태틱 함수에 인스턴스 라면이 올수 없는 이유는?
스태이틱 함수는 객체가 생성되지 않아도 자동으로 메모리에 올라가지만
인스턴스 함수나 변수는 객체 생성후 올라가기 때문.

8. 인스턴스 함수 안에 static 변수와 함수가 올 수 있는 이유는?
인스턴스 함수는 객체를 생성한 후에 메모리에 올라가지만 스테이틱 변수나 함수는 바로 올라가기 때문.
인스턴스 함수를 생성할 때 이미 스테이틱 함수와 변수는 메모리에 올라가 있음.