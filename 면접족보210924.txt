1. 상속을 UML로 표기해 보세요.
	상위클래스
	     ↑
            하위클래스

2. 부모 클래스와 자식 클래스의 다른 용어들은?
부모클래스 - 상위클래스, 기초클래스
자식클래스 - 하위클래스, 유도클래스

3. super 키워드와 this 키워드의 차이는 무엇인가요?
super - 접근제한자와 상관없이 상위클래스의 요소 접근 가능
this - private을 제외한 상위클래스의 요소에 접근 가능

4. 단일 상속과 다중 상속 이란?
단일 상속
하나의 하위클래스와 하나의 상위클래스만 연결 되는 것.
상위클래스가 또 상위클래스가 있을수는 있음.
다중 상속
하나의 하위클래스와 여러 상위클래스가 연결 될 수 있는 것

5. 다음 코드와 같이 과목과 점수가 짝을 이루도록 2개의 배열을 작성하라.
String course[] = {"Java", "C++", "HTML5", "컴퓨터구조", "안드로이드"};
int score[]  = {95, 88, 76, 62, 55};
/*
그리고 다음 예시와 같이 과목 이름을 입력받아 점수를 출력하는 프로그램을 작성하라. 
"그만"을 입력받으면 종료한다. (Java는 인덱스 0에 있으므로 score[0]을 출력)
과목 이름 >> Jaba
없는 과목입니다.
과목 이름 >> Java
Java의 점수는 95
과목 이름 >> 안드로이드
안드로이드의 점수는 55
과목 이름 >> 그만
*/
답
package week4;

import java.util.Scanner;

class Subject0924 {
	Scanner sc = new Scanner(System.in);
	private String course[]; // 배열에 값 넣는거 어떻게 하지?
	private int score[];
	private String icourse;
	private int i;
	boolean bool;
	boolean boo;

	public Subject0924() {
		course = new String[] { "JAVA", "C++", "HTML5", "컴퓨터구조", "안드로이드" };
		score = new int[] { 95, 88, 76, 62, 55 };
		bool = true;
		boo = true;
	}

	private void input() {
		System.out.println("과목을 입력하세요");
		icourse = sc.next();
	}

	private void output() {
		if (icourse.equals("그만")) {
			System.out.println("종료합니다.");
			bool = false;
		} else if (boo == true) {
			System.out.println("없는 과목입니다.");

		}
	}

	private void outputno() {
	}

	public void run() {
		input();
		for (int i = 0; i < course.length; ++i) {
			if (icourse.equals(course[i])) {
				System.out.println(score[i]);
				boo = false;
				break;
			}
		}
	}

	public void result() {
		do {
			run();
			outputno();
			output();
		} while (bool);
	}
}

public class Java18_0924problem5 {

	public static void main(String[] args) {
		Subject0924 sub = new Subject0924();
		sub.result();

	}

}

[Hint] 문자열을 비교하기 위해서는 String 클래스의 equals()메소드를 이용해야 한다.
String name;
	if(course[i].equals(name)) {
	int n = score[i];
	...
}

6. 다음은 2차원 상의 한 점을 표현하는 Point 클래스이다. 
Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.
```java
class Point {
	private int x, y;
	public Point(int x, int y) { this.x = x; this.y = y; }
	public int getX() { return x; }
	public int getY() { return y; }
	protected void move(int x, int y) { this.x =x; this.y = y; }
public static void main(String[] args) {
	ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
	cp.setXY(10, 20);
	cp.setColor("RED");
	String str = cp.toString();
	System.out.println(str+"입니다. ");
}
/*
=======================
RED색의 (10,20)의 점입니다.
*/
```
답
class ColorPoint09241 extends Point09241 {
	private String color;

	public ColorPoint09241(int x, int y, String color) {
		super(x, y);
		this.color = color;
	}

	public void setXY(int x, int y) {
		super.move(x, y);
	}

	public void setColor(String color) {
		this.color = color;
	}

	public String toString() {
		return (this.color + "색의 (" + super.getX() + "," + super.getY() + ")의 점");
	}
}

7. Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.
```java
public static void main(String[] args) {
	ColorPoint zeroPoint = new ColorPoint(); // (0,0) 위치의 BLACK 색 점
	System.out.println(zeroPoint.toString() + "입니다.");
	ColorPoint cp = new ColorPoint(10, 10); // (10,10) 위치의 BLACK 색 점
	cp.setXY(5,5);
	cp.setColor("RED");
	System.out.println(cp.toString()+"입니다.");
}
/*
=======================
BLACK색의 (0,0) 점입니다.
RED색의 (5,5) 점입니다.
*/
```
답
class ColorPoint09242 extends Point{
	private String color;
	public ColorPoint09242 () {
		super(0, 0);
		this.color = "BLACK";
	}
	public ColorPoint09242 (int x, int y) {
		super(x, y);
	}
	
	public void setXY (int x, int y) {
		super.move(x, y);
	}
	public void setColor(String color) {
		this.color = color;
	}
	public String toString() {
		return (color + "색의 (" + super.getX() + "," + super.getY() + ")의 점");
	}
}

8. Point를 상속받아 3차원의 점을 나타내는 Point3D 클래스를 작성하라. 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.
```java
public static void main(String[] args) {
	Point3D p = new Point3D(1,2,3); // 1,2,3은 각각 x, y, z축의 값.
	System.out.println(p.toString()+"입니다.");
	p.moveUp(); // z 축으로 위쪽 이동
	System.out.println(p.toString()+"입니다.");
	p.moveDown(); // z 축으로 아래쪽 이동
	p.move(10, 10); // x, y 축으로 이동
	System.out.println(p.toString()+"입니다.");
	p.move(100,  200, 300); // x, y, z축으로 이동
	System.out.println(p.toString()+"입니다.");
}
/*
=======================
(1,2,3) 의 점입니다.
(1,2,4) 의 점입니다.
(10,10,3) 의 점입니다.
(100,200,300) 의 점입니다.
*/
```
답
package week4;

class Point09243 {
	private int x, y;

	public Point09243(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public int getX() {
		return x;
	}

	public int getY() {
		return y;
	}

	protected void move(int x, int y) {
		this.x = x;
		this.y = y;
	}
}

class Point3D0924 extends Point09243 {
	private int z;

	public Point3D0924(int x, int y, int z) {
		super(x, y);
		this.z = z;

	}

	public String toString() {
		return (super.getX() + "," + super.getY() + "," + z);
	}

	public void moveUp() {
		this.z += 1;

	}

	public void moveDown() {
		this.z -= 1;
		super.move(getX(), getY());
	}

	public void move(int x, int y, int z) {
		super.move(x, y);
		this.z = z;
	}

}

public class Java17_0924problem8 {
	public static void main(String[] args) {
		Point3D0924 p = new Point3D0924(1, 2, 3); // 1,2,3은 각각 x, y, z축의 값.
		System.out.println(p.toString() + "입니다.");
		p.moveUp(); // z 축으로 위쪽 이동
		System.out.println(p.toString() + "입니다.");
		p.moveDown(); // z 축으로 아래쪽 이동
		p.move(10, 10); // x, y 축으로 이동 (상위클래스에 있음)
		System.out.println(p.toString() + "입니다.");
		p.move(100, 200, 300); // x, y, z축으로 이동
		System.out.println(p.toString() + "입니다.");
	}
}

9.다음 TV 클래스가 있다.
class TV{
   private int size;
   public TV(int size) { this.size = size; }
   protected int getSize() { return size; }
}
[1번] 다음 main() 메소드와 실행 결과를 참고하여 TV를 상속받은 ColorTV 클래스를 작성하라.

public static void main(String[] args) {
   ColorTV myTV = new ColorTV(32, 1024);
   myTV.printProperty();
}
/*
===========
32인치 1024컬러
*/
답
package week4;

class TV0924 {
	private int size;

	public TV0924(int size) {
		this.size = size;
	}

	protected int getSize() {
		return size;
	}
}

class ColorTV0924 extends TV0924 {
	private int color;

	public ColorTV0924(int size, int color) {
		super(size);
		this.color = color;
	}

	public void printProperty() {
		System.out.println(super.getSize() + "인치 " + this.color + "컬러");
	}
}

public class Java17 {
	public static void main(String[] args) {
		ColorTV0924 myTV = new ColorTV0924(32, 1024);
		myTV.printProperty();
	}
}

10. 다음 main() 메소드와 실행 결과를 참고하여 ColorTV를 상속받는 IPTV 클래스를 작성하라.
public static void main(String[] args) {
   IPTV iptv = new IPTV("192.1.1.2", 32, 2048); //"192.1.1.2" 주소에 32인치, 2048컬러
   iptv.printProperty();
}
/*
=============================================
나의 IPTV는 192.1.1.2 주소의 32인치 2048컬러
*/
package week4;

class TV0924 {
	private int size;

	public TV0924(int size) {
		this.size = size;
	}

	protected int getSize() {
		return size;
	}
}

class ColorTV0924 extends TV0924 {
	private int color;

	public ColorTV0924(int size, int color) {
		super(size);
		this.color = color;
	}

	protected int getColor() {
		return color;
	}

	public void printProperty() {
		System.out.println(super.getSize() + "인치 " + this.color + "컬러");
	}
}

class IPTV0924 extends ColorTV0924 {
	private String IP;

	public IPTV0924(String IP, int size, int color) {
		super(size, color);
		this.IP = IP;
	}

	public void printProperty() {
		System.out.println("나의 IPTV는 " + this.IP + "주소의 " + super.getSize() + "인치 " + super.getColor() + "컬러");
	}
}

public class Java19 {
	public static void main(String[] args) {
		IPTV0924 iptv = new IPTV0924("192.1.1.2", 32, 2048); // "192.1.1.2" 주소에 32인치, 2048컬러
		iptv.printProperty();
	}
}